/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as TeamIndexRouteImport } from './routes/team/index'
import { Route as SettingsIndexRouteImport } from './routes/settings/index'
import { Route as ScanIndexRouteImport } from './routes/scan/index'
import { Route as ReportsIndexRouteImport } from './routes/reports/index'
import { Route as PackagesIndexRouteImport } from './routes/packages/index'
import { Route as MerchantsIndexRouteImport } from './routes/merchants/index'
import { Route as DriversIndexRouteImport } from './routes/drivers/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as PackagesBulkCreateRouteImport } from './routes/packages/bulk-create'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamIndexRoute = TeamIndexRouteImport.update({
  id: '/team/',
  path: '/team/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const ScanIndexRoute = ScanIndexRouteImport.update({
  id: '/scan/',
  path: '/scan/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsIndexRoute = ReportsIndexRouteImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => rootRouteImport,
} as any)
const PackagesIndexRoute = PackagesIndexRouteImport.update({
  id: '/packages/',
  path: '/packages/',
  getParentRoute: () => rootRouteImport,
} as any)
const MerchantsIndexRoute = MerchantsIndexRouteImport.update({
  id: '/merchants/',
  path: '/merchants/',
  getParentRoute: () => rootRouteImport,
} as any)
const DriversIndexRoute = DriversIndexRouteImport.update({
  id: '/drivers/',
  path: '/drivers/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const PackagesBulkCreateRoute = PackagesBulkCreateRouteImport.update({
  id: '/packages/bulk-create',
  path: '/packages/bulk-create',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/packages/bulk-create': typeof PackagesBulkCreateRoute
  '/dashboard': typeof DashboardIndexRoute
  '/drivers': typeof DriversIndexRoute
  '/merchants': typeof MerchantsIndexRoute
  '/packages': typeof PackagesIndexRoute
  '/reports': typeof ReportsIndexRoute
  '/scan': typeof ScanIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/team': typeof TeamIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/packages/bulk-create': typeof PackagesBulkCreateRoute
  '/dashboard': typeof DashboardIndexRoute
  '/drivers': typeof DriversIndexRoute
  '/merchants': typeof MerchantsIndexRoute
  '/packages': typeof PackagesIndexRoute
  '/reports': typeof ReportsIndexRoute
  '/scan': typeof ScanIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/team': typeof TeamIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/login': typeof LoginRoute
  '/packages/bulk-create': typeof PackagesBulkCreateRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/drivers/': typeof DriversIndexRoute
  '/merchants/': typeof MerchantsIndexRoute
  '/packages/': typeof PackagesIndexRoute
  '/reports/': typeof ReportsIndexRoute
  '/scan/': typeof ScanIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/team/': typeof TeamIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/packages/bulk-create'
    | '/dashboard'
    | '/drivers'
    | '/merchants'
    | '/packages'
    | '/reports'
    | '/scan'
    | '/settings'
    | '/team'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/packages/bulk-create'
    | '/dashboard'
    | '/drivers'
    | '/merchants'
    | '/packages'
    | '/reports'
    | '/scan'
    | '/settings'
    | '/team'
  id:
    | '__root__'
    | '/login'
    | '/packages/bulk-create'
    | '/dashboard/'
    | '/drivers/'
    | '/merchants/'
    | '/packages/'
    | '/reports/'
    | '/scan/'
    | '/settings/'
    | '/team/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LoginRoute: typeof LoginRoute
  PackagesBulkCreateRoute: typeof PackagesBulkCreateRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DriversIndexRoute: typeof DriversIndexRoute
  MerchantsIndexRoute: typeof MerchantsIndexRoute
  PackagesIndexRoute: typeof PackagesIndexRoute
  ReportsIndexRoute: typeof ReportsIndexRoute
  ScanIndexRoute: typeof ScanIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
  TeamIndexRoute: typeof TeamIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/team/': {
      id: '/team/'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/scan/': {
      id: '/scan/'
      path: '/scan'
      fullPath: '/scan'
      preLoaderRoute: typeof ScanIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports/': {
      id: '/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/packages/': {
      id: '/packages/'
      path: '/packages'
      fullPath: '/packages'
      preLoaderRoute: typeof PackagesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/merchants/': {
      id: '/merchants/'
      path: '/merchants'
      fullPath: '/merchants'
      preLoaderRoute: typeof MerchantsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/drivers/': {
      id: '/drivers/'
      path: '/drivers'
      fullPath: '/drivers'
      preLoaderRoute: typeof DriversIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/packages/bulk-create': {
      id: '/packages/bulk-create'
      path: '/packages/bulk-create'
      fullPath: '/packages/bulk-create'
      preLoaderRoute: typeof PackagesBulkCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  LoginRoute: LoginRoute,
  PackagesBulkCreateRoute: PackagesBulkCreateRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DriversIndexRoute: DriversIndexRoute,
  MerchantsIndexRoute: MerchantsIndexRoute,
  PackagesIndexRoute: PackagesIndexRoute,
  ReportsIndexRoute: ReportsIndexRoute,
  ScanIndexRoute: ScanIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  TeamIndexRoute: TeamIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
