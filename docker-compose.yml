version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: dyhe-db
    environment:
      POSTGRES_DB: dyhe
      POSTGRES_USER: dyhe
      POSTGRES_PASSWORD: dyhe
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dyhe -d dyhe"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: dyhe-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 8000
      DATABASE_URL: postgresql://dyhe:dyhe@db:5432/dyhe?schema=public
      JWT_SECRET: change-me
    ports:
      - "8000:8000"
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: dyhe-web
    depends_on:
      - api
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://api:8000
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  db_data:
